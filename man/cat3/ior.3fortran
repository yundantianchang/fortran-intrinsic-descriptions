NAME

IOR(3) - [BIT:LOGICAL] Bitwise logical inclusive or (GFDL)

SYNTAX

       result = ior(i, j)
        integer,intent(in) :: i
        integer,intent(in) :: j

DESCRIPTION

IOR returns the bit-wise Boolean inclusive-OR of I and J.

ARGUMENTS

    I
        an _integer_ scalar or array.

    J
        _integer_ scalar or array, of the same kind as I.

RETURNS

The return type is _integer_, of the same kind as the arguments. (If the
argument kinds differ, it is of the same kind as the larger argument.)

EXAMPLES

Sample program:

    program demo_ior
    implicit none
    integer :: i, j, k
       i=53       ! i=00110101 binary (lowest order byte)
       j=45       ! j=00101101 binary (lowest order byte)
       k=ior(i,j) ! k=00111101 binary (lowest order byte) , k=61 decimal
       write(*,'(i8,1x,b8.8)')i,i,j,j,k,k
    end program demo_ior

Results:

             53 00110101
             45 00101101
             61 00111101

STANDARD

Fortran 95 and later

SEE ALSO

IEOR(3), IBCLR(3), NOT(3), BTEST(3), IBCLR(3), IBITS(3), IBSET(3),
IAND(3), IEOR(3), MVBITS(3)

fortran-lang intrinsic descriptions
