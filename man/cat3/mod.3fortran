NAME

MOD(3) - [NUMERIC] Remainder function (GFDL)

SYNTAX

    result = mod(a, p)

DESCRIPTION

MOD(a,p) computes the remainder of the division of A by P.

ARGUMENTS

    A
        Shall be a scalar of type _integer_ or _real_.

    P
        Shall be a scalar of the same type and kind as A and not equal
        to zero.

RETURNS

The return value is the result of A - (INT(A/P) * P). The type and kind
of the return value is the same as that of the arguments. The returned
value has the same sign as A and a magnitude less than the magnitude of
P.

EXAMPLES

Sample program:

    program demo_mod
    implicit none
         print *, mod(17,3)           ! yields 2
         print *, mod(17.5,5.5)       ! yields 1.0
         print *, mod(17.5d0,5.5d0)   ! yields 1.0d0
         print *, mod(17.5d0,5.5d0)   ! yields 1.0d0

         print *, mod(-17,3)          ! yields -2
         print *, mod(-17.5,5.5)      ! yields -1.0
         print *, mod(-17.5d0,5.5d0)  ! yields -1.0d0
         print *, mod(-17.5d0,5.5d0)  ! yields -1.0d0

         print *, mod(17,-3)          ! yields 2
         print *, mod(17.5,-5.5)      ! yields 1.0
         print *, mod(17.5d0,-5.5d0)  ! yields 1.0d0
         print *, mod(17.5d0,-5.5d0)  ! yields 1.0d0
    end program demo_mod

Results:

                  2
          1.00000000
          1.0000000000000000
          1.0000000000000000
                 -2
         -1.00000000
         -1.0000000000000000
         -1.0000000000000000
                  2
          1.00000000
          1.0000000000000000
          1.0000000000000000

STANDARD

FORTRAN 77 and later

SEE ALSO

MODULO(3)

fortran-lang intrinsic descriptions
