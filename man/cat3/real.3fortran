NAME

REAL(3) - [TYPE:NUMERIC] Convert to real type (GFDL)

SYNTAX

    result = real(x, kind)

DESCRIPTION

REAL(X, KIND) converts its argument X to a real type.

ARGUMENTS

    X
        Shall be _integer_, _real_, or _complex_.

    KIND
        (Optional) An _integer_ initialization expression indicating the
        kind parameter of the result.

RETURNS

These functions return a _real_ variable or array under the following
rules:

1.  REAL(x) is converted to a default _real_ type if X is an _integer_
    or _real_ variable.

2.  REAL(x) is converted to a real type with the kind type parameter of
    X if X is a _complex_ variable.

3.  REAL(X, KIND) is converted to a _real_ type with kind type parameter
    KIND if X is a _complex_, _integer_, or _real_ variable.

EXAMPLES

Sample program:

    program demo_real
    use,intrinsic :: iso_fortran_env, only : dp=>real64
    implicit none
    complex              :: zr = (1.0, 2.0)
    doubleprecision      :: xd=huge(3.0d0)
    complex(kind=dp) :: zd=cmplx(4.0e0_dp,5.0e0_dp,kind=dp)

       print *, real(zr), aimag(zr)
       print *, dble(zd), aimag(zd)

       write(*,*)xd,real(xd,kind=kind(0.0d0)),dble(xd)
    end program demo_real

Results:

     1.00000000       2.00000000
     4.0000000000000000       5.0000000000000000
     1.7976931348623157E+308  1.7976931348623157E+308  1.7976931348623157E+308

STANDARD

FORTRAN 77 and later

SEE ALSO

DBLE(3), FLOAT(3)

fortran-lang intrinsic descriptions
