NAME

FLOOR(3) - [NUMERIC] function to return largest integral value not
greater than argument

SYNTAX

    result = floor(a, KIND)

        elemental function floor(a,KIND)
        integer(kind=KIND) :: floor
        real(kind=kind(a)),intent(in) :: a
        integer(kind=IKIND),intent(in),optional :: KIND

    where __KIND__ is any valid value for type _integer_.

DESCRIPTION

FLOOR(A) returns the greatest integer less than or equal to A. That is,
it picks the whole number at or to the left of the value on the scale
-HUGE(INT(A,KIND=KIND))-1 to HUGE(INT(A),KIND=KIND).

ARGUMENTS

    A
        The type shall be _real_.

    KIND
        (Optional) A scalar _integer_ constant initialization expression
        indicating the kind parameter of the result.

RETURNS

The return value is of type _integer(kind)_ if KIND is present and of
default-kind _integer_ otherwise.

The result is undefined if it cannot be represented in the specified
integer type.

EXAMPLES

Sample program:

    program demo_floor
    implicit none
    real :: x = 63.29
    real :: y = -63.59
        print *, x, floor(x)
        print *, y, floor(y)
       ! elemental
       print *,floor([ &
       &  -2.7,  -2.5, -2.2, -2.0, -1.5, -1.0, -0.5, &
       &  0.0,   &
       &  +0.5,  +1.0, +1.5, +2.0, +2.2, +2.5, +2.7  ])

       ! note even a small deviation from the whole number changes the result
       print *,      [2.0,2.0-epsilon(0.0),2.0-2*epsilon(0.0)]
       print *,floor([2.0,2.0-epsilon(0.0),2.0-2*epsilon(0.0)])

       ! A=Nan, Infinity or  <huge(0_KIND)-1 < A > huge(0_KIND) is undefined
    end program demo_floor

Results:

          63.29000              63
         -63.59000             -64
                 -3          -3          -3          -2          -2          -1
                 -1           0           0           1           1           2
                  2           2           2
          2.000000       2.000000       2.000000
                  2           1           1

STANDARD

Fortran 95 and later

SEE ALSO

CEILING(3), NINT(3)

AINT(3), ANINT(3), INT(3), SELECTED_INT_KIND(3)

fortran-lang intrinsic descriptions (license: MIT) @urbanjost
