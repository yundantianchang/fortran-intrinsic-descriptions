NAME

INDEX(3) - [CHARACTER:SEARCH] Position of a substring within a string

SYNTAX

       index(string, substring, back, kind) result(start)

         character(len=*),intent(in) :: string
         character(len=*),intent(in) :: substring
         logical,intent(in),optional :: back
         integer,intent(in),optional :: kind
         integer(kind=KIND)          :: start

DESCRIPTION

Returns the position of the start of the leftmost or rightmost
occurrence of string SUBSTRING in STRING, counting from one. If
SUBSTRING is not present in STRING, zero is returned.

ARGUMENTS

    STRING
        string to be searched

    SUBSTRING
        string to attempt to locate in STRING

    BACK
        If the BACK argument is present and true, the return value is
        the start of the rightmost occurrence rather than the leftmost.

    KIND
        An _integer_ initialization expression indicating the kind
        parameter of the result.

RETURNS

    START
        The return value is of type _integer_ and of kind KIND. If KIND
        is absent, the return value is of default integer kind.

EXAMPLES

Example program

    program demo_index
    implicit none
    character(len=*),parameter :: str=&
       'Search this string for this expression'
       !1234567890123456789012345678901234567890
       write(*,*)&
          index(str,'this').eq.8,              &
          ! return value is counted from the left end even if BACK=.TRUE.
          index(str,'this',back=.true.).eq.24, &
          ! INDEX is case-sensitive
          index(str,'This').eq.0
    end program demo_index

Expected Results:

       T T T

STANDARD

FORTRAN 77 and later, with KIND argument Fortran 2003 and later

SEE ALSO

Functions that perform operations on character strings, return lengths
of arguments, and search for certain arguments:

-   ELEMENTAL: ADJUSTL(3), ADJUSTR(3), INDEX(3), SCAN(3), VERIFY(3)

-   NONELEMENTAL: LEN_TRIM(3), LEN(3), REPEAT(3), TRIM(3)

fortran-lang intrinsic descriptions
