NAME

INT(3) - [TYPE:NUMERIC] Convert to integer type by truncating towards
zero

SYNTAX

    result = int(a, kind)

     integer(kind=KIND) elemental function int(a,kind)
     TYPE(kind=KIND),intent(in),optional :: a
     integer,optional :: kind

DESCRIPTION

Convert to integer type by truncating towards zero.

ARGUMENTS

    A
        Shall be of type _integer_, _real_, or _complex_ or a
        BOZ-literal-constant.

    KIND
        An _integer_ initialization expression indicating the kind
        parameter of the result.

    If not present the returned type is that of default integer type.

RETURNS

returns an _integer_ variable or array applying the following rules:

CASE:

1.  If A is of type _integer_, INT(a) = a

2.  If A is of type _real_ and |A| < 1, INT(A) equals 0. If |A| >= 1,
    then INT(A) equals the integer whose magnitude does not exceed A and
    whose sign is the same as the sign of A.

3.  If A is of type _complex_, rule 2 is applied to the _real_ part of
    A.

4.  If _a_ is a boz-literal constant, it is treated as an _integer_ with
    the _kind_ specified.

    The interpretation of a bit sequence whose most significant bit is 1
    is processor dependent.

The result is undefined if it cannot be represented in the specified
integer type.

EXAMPLES

Sample program:

    program demo_int
    use,intrinsic :: iso_fortran_env, only : int8, int16, int32, int64
    implicit none
    integer :: i = 42
    complex :: z = (-3.7, 1.0)
    real :: x=-10.5, y=10.5

       print *, int(x), int(y)

       print *, int(i)

       print *, int(z), int(z,8)
       ! elemental
       print *, int([-10.9,-10.5,-10.3,10.3,10.5,10.9])
       ! note int(3) truncates towards zero

       ! CAUTION:
       ! a number bigger than a default integer can represent
       ! produces an incorrect result and is not required to
       ! be detected by the program.
       x=real(huge(0))+1000.0
       print *, int(x),x
       ! using a larger kind
       print *, int(x,kind=int64),x

       print *, int(&
       & B"111111111111111111111111111111111111111111111111111111111111111",&
       & kind=int64)
       print *, int(O"777777777777777777777",kind=int64)
       print *, int(Z"7FFFFFFFFFFFFFFF",kind=int64)

       ! elemental
       print *
       print *,int([ &
       &  -2.7,  -2.5, -2.2, -2.0, -1.5, -1.0, -0.5, &
       &  0.0,   &
       &  +0.5,  +1.0, +1.5, +2.0, +2.2, +2.5, +2.7  ])

    end program demo_int

Results:

                -10   10
                 42
                 -3  -3
                -10  -10  -10   10   10  10
        -2147483648   2.14748467E+09
         2147484672   2.14748467E+09
         9223372036854775807
         9223372036854775807
         9223372036854775807

        -2          -2          -2          -2          -1
        -1           0           0           0           1
         1           2           2           2           2

STANDARD

FORTRAN 77 and later

SEE ALSO

AINT(3), ANINT(3), NINT(3), SELECTED_INT_KIND(3), CEILING(3), FLOOR(3)

fortran-lang intrinsic descriptions (@urbanjost)
