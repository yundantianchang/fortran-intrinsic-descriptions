NAME

LEN_TRIM(3) - [CHARACTER:WHITESPACE] Length of a character entity
without trailing blank characters

SYNTAX

       result = len_trim(string, kind)

        integer(kind=KIND) function len_trim(string,KIND) result (value)
        character(len=*),intent(in) :: string
        integer,optional,intent(in) :: KIND
        integer(kind=KIND) :: value

DESCRIPTION

Returns the length of a character string, ignoring any trailing blanks.

ARGUMENTS

    STRING
        The input string whose length is to be measured. Shall be a
        scalar of type _character_

    KIND
        (Optional) An _integer_ initialization expression indicating the
        kind parameter of the result.

RETURNS

The return value is of type _integer_ and of kind KIND. If KIND is
absent, the return value is of default _integer_ kind.

EXAMPLES

Sample program

    program demo_len_trim
    implicit none
    character(len=:),allocatable :: string
       string=' how long is this string?     '
       write(*,*)'LENGTH=',len(string)
       write(*,*)'TRIMMED LENGTH=',len_trim(string)
       !
       ELE:block ! elemental example
       character(len=:),allocatable :: tablet(:)
       tablet=[character(len=256) :: &
       & ' how long is this string?     ',&
       & 'and this one?']
          write(*,*)'LENGTH=            ',len(tablet)
          write(*,*)'TRIMMED LENGTH=    ',len_trim(tablet)
          write(*,*)'SUM TRIMMED LENGTH=',sum(len_trim(tablet))
       endblock ELE
       !
    end program demo_len_trim

Results:

        LENGTH=          30
        TRIMMED LENGTH=          25
        LENGTH=                     256
        TRIMMED LENGTH=              25          13
        SUM TRIMMED LENGTH=          38

STANDARD

Fortran 95 and later, with KIND argument - Fortran 2003 and later

SEE ALSO

Functions that perform operations on character strings, return lengths
of arguments, and search for certain arguments:

-   ELEMENTAL: ADJUSTL(3), ADJUSTR(3), INDEX(3), SCAN(3), VERIFY(3)

-   NONELEMENTAL: REPEAT(3), LEN(3), TRIM(3)

fortran-lang intrinsic descriptions (license: MIT) @urbanjost
