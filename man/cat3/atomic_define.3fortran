NAME

ATOMIC_DEFINE(3) - [ATOMIC] Setting a variable atomically (GFDL)

SYNTAX

    call atomic_define (atom, value, stat)

       subroutine atomic_define(atom, value, stat)
       TYPE(kind=KIND) :: atom
       TYPE(kind=KIND) :: value
       integer,intent(out),optional :: stat

DESCRIPTION

ATOMIC_DEFINE(ATOM, VALUE) defines the variable ATOM with the value
VALUE atomically. When STAT is present and the invocation was
successful, it is assigned the value 0. If it is present and the
invocation has failed, it is assigned a positive value; in particular,
for a coindexed ATOM, if the remote image has stopped, it is assigned
the value of iso_fortran_env's stat_stopped_image and if the remote
image has failed, the value stat_failed_image.

ARGUMENTS

    ATOM
        Scalar coarray or coindexed variable of either integer type with
        atomic_int_kind kind or logical type with atomic_logical_kind
        kind.

    VALUE
        Scalar of the same type as ATOM. If the kind is different, the
        value is converted to the kind of ATOM.

    STAT
        (optional) Scalar default-kind integer variable.

EXAMPLES

Sample program:

    program demo_atomic_define
    use iso_fortran_env
    implicit none
    integer(atomic_int_kind) :: atom[*]
        call atomic_define(atom[1], this_image())
    end program demo_atomic_define

STANDARD

Fortran 2008 and later; with STAT, TS 18508 or later

SEE ALSO

ATOMIC_REF(3), ATOMIC_CAS(3), ISO_FORTRAN_ENV(3), ATOMIC_ADD(3),
ATOMIC_AND(3), ATOMIC_OR(3), ATOMIC_XOR(3)

fortran-lang intrinsic descriptions
