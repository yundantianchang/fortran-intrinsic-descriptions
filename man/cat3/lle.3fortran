NAME

LLE(3) - [CHARACTER:COMPARE] Lexical less than or equal

SYNTAX

    result = lle(str_a, str_b)

       character(len=*),intent(in) :: str_a, str_b

          or

       character(len=*),intent(in) :: str_a, str_b(*) logical :: result

DESCRIPTION

Determines whether one string is lexically less than or equal to another
string, where the two strings are interpreted as containing ASCII
character codes. if the STRING_A and STRING_B are not the same length,
the shorter is compared as if spaces were appended to it to form a value
that has the same length as the longer. Leading spaces are significant.

In general, the lexical comparison intrinsics LGE, LGT, LLE, and LLT
differ from the corresponding intrinsic operators .ge., .gt., .le., and
.lt., in that the latter use the processor's character ordering (which
is not ASCII on some targets), whereas the former always use the ASCII
ordering.

ARGUMENTS

    STR_A
        variable or array of default _character_ type.

    STR_B
        variable or array of default _character_ type.

    if STR_A and STR_B are both arrays they must be of the same shape.

RETURNS

-   RESULT Returns .TRUE. if STR_A <= STR_B, and .FALSE. otherwise,
    based on the ASCII ordering.

EXAMPLES

Sample program:

    program demo_lle
    implicit none
    integer             :: i
       write(*,'(*(a))')(char(i),i=32,126)
         write(*,*) lle('abc','ABC')              ! F lowercase is > uppercase
         write(*,*) lle('abc','abc  ')            ! T trailing spaces
         ! If both strings are of zero length the result is true.
         write(*,*) lle('','')                    ! T
         write(*,*) lle('','a')                   ! T the null string is padded
         write(*,*) lle('a','')                   ! F
         write(*,*) lle('abc',['abc','123'])      ! [T,F] scalar and array
         write(*,*) lle(['cba', '123'],'abc')     ! [F,T]
         write(*,*) lle(['abc','123'],['cba','123']) ! [T,T] both arrays
    end program demo_lle

Results:

      !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ
      [\]^_`abcdefghijklmnopqrstuvwxyz{|}~
      F
      T
      T
      T
      F
      T F
      F T
      T T

STANDARD

FORTRAN 77 and later

SEE ALSO

LGE(3), LGT(3),, LLT(3)

Functions that perform operations on character strings, return lengths
of arguments, and search for certain arguments:

-   ELEMENTAL: ADJUSTL(3), ADJUSTR(3), INDEX(3),

SCAN(3), VERIFY(3)

-   NONELEMENTAL: LEN_TRIM(3), LEN(3), REPEAT(3), TRIM(3)

fortran-lang intrinsic descriptions
