NAME

DIGITS(3) - [NUMERIC MODEL] Significant digits function

SYNTAX

    result = digits(x)
        function digits(x)
        type(integer(kind=kind(0)))      :: digits
        type(TYPE(kind=KIND)),intent(in) :: x(..)

where TYPE may be _integer_ or _real_ and KIND is any kind supported by
TYPE.

DESCRIPTION

DIGITS(X) returns the number of significant digits of the internal model
representation of X. For example, on a system using a 32-bit floating
point representation, a default real number would likely return 24.

ARGUMENTS

    X
        The type may be a scalar or array of type _integer_ or _real_.

RETURNS

The return value is of type _integer_ of default kind.

EXAMPLES

Sample program:

    program demo_digits
    implicit none
    integer :: i = 12345
    real :: x = 3.143
    doubleprecision :: y = 2.33d0
       print *,'default integer:', digits(i)
       print *,'default real:   ', digits(x)
       print *,'default doubleprecision:', digits(y)
    end program demo_digits

Typical Results:

        default integer:                  31
        default real:                     24
        default doubleprecision:          53

STANDARD

Fortran 95 and later

SEE ALSO

EPSILON(3), EXPONENT(3), FRACTION(3), HUGE(3), MAXEXPONENT(3),
MINEXPONENT(3), NEAREST(3), PRECISION(3), RADIX(3), RANGE(3),
RRSPACING(3), SCALE(3), SET_EXPONENT(3), SPACING(3), TINY(3)

fortran-lang intrinsic descriptions (license: MIT) @urbanjost
