NAME

UNPACK(3) - [ARRAY CONSTRUCTION] Store the elements of a vector in an
array of higher rank

SYNTAX

    result = unpack(vector, mask, field)

DESCRIPTION

Store the elements of VECTOR in an array of higher rank.

ARGUMENTS

    VECTOR
        Shall be an array of any type and rank one. It shall have at
        least as many elements as MASK has .TRUE. values.

    MASK
        Shall be an array of type _logical_.

    FIELD
        Shall be of the same type as VECTOR and have the same shape as
        MASK.

RETURNS

The resulting array corresponds to FIELD with .TRUE. elements of MASK
replaced by values from VECTOR in array element order.

EXAMPLES

Sample program:

    program demo_unpack
    implicit none
    integer :: vector(2)  = [1,1]
    logical :: mask(4)  = [ .true., .false., .false., .true. ]
    integer :: field(2,2) = 0, unity(2,2)

       ! result: unity matrix
       unity = unpack(vector, reshape(mask, [2,2]), field)
       write(*,*)unity,size(unity),shape(unity)

    end program demo_unpack

Results:

                  1           0           0           1           4
                  2           2

STANDARD

Fortran 95 and later

SEE ALSO

PACK(3), MERGE(3), PACK(3), SPREAD(3), UNPACK(3)

fortran-lang intrinsic descriptions
