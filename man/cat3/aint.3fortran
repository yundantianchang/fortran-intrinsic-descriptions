NAME

AINT(3) - [NUMERIC] Truncate to a whole number

SYNTAX

    result = aint(x)

       real(kind=kind(x)),elemental  :: aint

       real(kind=kind(x)),intent(in) :: x

or

    result = aint(x, KIND)

       real(kind=KIND),elemental     :: aint

       integer,intent(in),optional   :: KIND
       real(kind=kind(x)),intent(in) :: x

DESCRIPTION

AINT(X, KIND) truncates its argument to a whole number.

ARGUMENTS

    X
        the type of the argument shall be _real_.

    KIND
        (optional) an _integer_ initialization expression indicating the
        kind parameter of the result.

RETURNS

The return value is of type _real_ with the kind type parameter of the
argument if the optional KIND is absent; otherwise, the kind type
parameter will be given by KIND. If the magnitude of X is less than one,
AINT(X) returns zero. If the magnitude is equal to or greater than one
then it returns the largest whole number that does not exceed its
magnitude. The sign is the same as the sign of X.

EXAMPLES

Sample program:

    program demo_aint
    use, intrinsic :: iso_fortran_env, only : real32, real64
    implicit none
    real(kind=real32) :: x4
    real(kind=real64) :: x8

       x4 = 4.3210_real32
       x8 = 4.3210_real64
       print *, aint(x4), aint(x8)
       print *
       ! elemental
       print *,aint([ &
        &  -2.7,  -2.5, -2.2, -2.0, -1.5, -1.0, -0.5, &
        &  0.0,   &
        &  +0.5,  +1.0, +1.5, +2.0, +2.2, +2.5, +2.7  ])

    end program demo_aint

Results:

         4.00000000       4.0000000000000000

        -2.00000000      -2.00000000      -2.00000000      -2.00000000
        -1.00000000      -1.00000000      -0.00000000       0.00000000
         0.00000000       1.00000000       1.00000000       2.00000000
         2.00000000       2.00000000       2.00000000

STANDARD

FORTRAN 77 and later

SEE ALSO

ANINT(3), INT(3), NINT(3), SELECTED_INT_KIND(3), CEILING(3), FLOOR(3)

fortran-lang intrinsic descriptions
