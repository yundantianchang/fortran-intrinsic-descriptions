NAME

MASKL(3) - [BIT:SET] Generates a left justified mask

SYNTAX

    result = maskl(i, kind)

      integer elemental function maskl(i,kind)
      integer,intent(in),optional :: kind

DESCRIPTION

MASKL(I[, _KIND_]) has its leftmost I bits set to 1, and the remaining
bits set to 0.

ARGUMENTS

    I
        Shall be of type _integer_. Its value must be non-negative, and
        less than or equal to the number of bits for the kind of the
        result.

    KIND
        Shall be a scalar constant expression of type _integer_.

RETURNS

The return value is of type _integer_. If KIND is present, it specifies
the kind value of the return type; otherwise, it is of the default
integer kind.

The leftmost I bits are set to 1 and the other bits are set to 0.

EXAMPLES

Sample program:

    program demo_maskl
    implicit none
    integer :: i
       i=maskl(1)
       write(*,'(i0,1x,b0,/)') i,i
       ! elemental
       write(*,'(*(i11,1x,b0,1x,/))') maskl([(i,i,i=1,bit_size(0))])
    end program demo_maskl

Results:

    -2147483648 10000000000000000000000000000000

              0 0
    -2147483648 10000000000000000000000000000000
    -1073741824 11000000000000000000000000000000
     -536870912 11100000000000000000000000000000
     -268435456 11110000000000000000000000000000
     -134217728 11111000000000000000000000000000
      -67108864 11111100000000000000000000000000
      -33554432 11111110000000000000000000000000
      -16777216 11111111000000000000000000000000
       -8388608 11111111100000000000000000000000
       -4194304 11111111110000000000000000000000
       -2097152 11111111111000000000000000000000
       -1048576 11111111111100000000000000000000
        -524288 11111111111110000000000000000000
        -262144 11111111111111000000000000000000
        -131072 11111111111111100000000000000000
         -65536 11111111111111110000000000000000
         -32768 11111111111111111000000000000000
         -16384 11111111111111111100000000000000
          -8192 11111111111111111110000000000000
          -4096 11111111111111111111000000000000
          -2048 11111111111111111111100000000000
          -1024 11111111111111111111110000000000
           -512 11111111111111111111111000000000
           -256 11111111111111111111111100000000
           -128 11111111111111111111111110000000
            -64 11111111111111111111111111000000
            -32 11111111111111111111111111100000
            -16 11111111111111111111111111110000
             -8 11111111111111111111111111111000
             -4 11111111111111111111111111111100
             -2 11111111111111111111111111111110
             -1 11111111111111111111111111111111

STANDARD

Fortran 2008 and later

SEE ALSO

MASKR(3)

fortran-lang intrinsic descriptions (@urbanjost)
